// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PlanningPresenceBlazor.Data;

#nullable disable

namespace PlanningPresenceBlazor.Migrations
{
    [DbContext(typeof(PlanningDbContext))]
    [Migration("20250612225930_UpdatePlanningSchema")]
    partial class UpdatePlanningSchema
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("PlanningPresenceBlazor.Data.AffectationEquipeClient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClientId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DateFin")
                        .HasColumnType("TEXT");

                    b.Property<int>("EquipeId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("EstActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FrequenceMission")
                        .HasColumnType("TEXT");

                    b.Property<string>("JoursPresence")
                        .HasColumnType("TEXT");

                    b.Property<int>("NombreMaxPersonnes")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NombreMinPersonnes")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int>("TypeMission")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("EstActive");

                    b.HasIndex("EquipeId", "ClientId", "DateDebut");

                    b.ToTable("AffectationsEquipeClient");
                });

            modelBuilder.Entity("PlanningPresenceBlazor.Data.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Adresse")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("CodeClient")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("CodePostal")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("ContactPrincipal")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DateDebutContrat")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DateFinContrat")
                        .HasColumnType("TEXT");

                    b.Property<int>("DistanceKm")
                        .HasColumnType("INTEGER");

                    b.Property<string>("EmailContact")
                        .HasMaxLength(150)
                        .HasColumnType("TEXT");

                    b.Property<bool>("EstActif")
                        .HasColumnType("INTEGER");

                    b.Property<string>("HeuresOuverture")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Pays")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("TelephoneContact")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<int>("TempsDeplacement")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Ville")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CodeClient")
                        .IsUnique();

                    b.HasIndex("EstActif");

                    b.HasIndex("Nom");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("PlanningPresenceBlazor.Data.ClientCompetenceRequise", b =>
                {
                    b.Property<int>("ClientId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CompetenceId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("EstObligatoire")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NiveauMinimum")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Notes")
                        .HasColumnType("TEXT");

                    b.HasKey("ClientId", "CompetenceId");

                    b.HasIndex("CompetenceId");

                    b.ToTable("ClientCompetencesRequises");
                });

            modelBuilder.Entity("PlanningPresenceBlazor.Data.Competence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Categorie")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<bool>("EstActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Categorie");

                    b.HasIndex("Nom")
                        .IsUnique();

                    b.ToTable("Competences");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Categorie = 0,
                            EstActive = true,
                            Nom = "Développement Web"
                        },
                        new
                        {
                            Id = 2,
                            Categorie = 0,
                            EstActive = true,
                            Nom = "Support Technique"
                        },
                        new
                        {
                            Id = 3,
                            Categorie = 1,
                            EstActive = true,
                            Nom = "Gestion de Projet"
                        },
                        new
                        {
                            Id = 4,
                            Categorie = 2,
                            EstActive = true,
                            Nom = "Anglais"
                        },
                        new
                        {
                            Id = 5,
                            Categorie = 4,
                            EstActive = true,
                            Nom = "Permis B"
                        },
                        new
                        {
                            Id = 6,
                            Categorie = 3,
                            EstActive = true,
                            Nom = "ITIL"
                        },
                        new
                        {
                            Id = 7,
                            Categorie = 0,
                            EstActive = true,
                            Nom = "Sécurité Informatique"
                        },
                        new
                        {
                            Id = 8,
                            Categorie = 0,
                            EstActive = true,
                            Nom = "Administration Système"
                        });
                });

            modelBuilder.Entity("PlanningPresenceBlazor.Data.ConfigurationPlanning", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DateModification")
                        .HasColumnType("TEXT");

                    b.Property<int>("DelaiNotificationJours")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("EstActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("JoursCritiques")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("JoursFlexibles")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ModifiePar")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<bool>("OptimiserDeplacements")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PresencesMaxJoursCritiques")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PresencesMaxJoursFlexibles")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PresencesMaxParJour")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PresencesMaxParPersonne")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PresencesMinJoursCritiques")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PresencesMinJoursFlexibles")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PresencesMinParJour")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PresencesMinParPersonne")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("RespectCompetences")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("RotationEquitable")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("EstActive");

                    b.ToTable("ConfigurationsPlanning");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCreation = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DelaiNotificationJours = 7,
                            EstActive = true,
                            JoursCritiques = "[\"Lundi\",\"Mardi\",\"Vendredi\"]",
                            JoursFlexibles = "[\"Mercredi\",\"Jeudi\"]",
                            Nom = "Configuration par défaut",
                            OptimiserDeplacements = true,
                            PresencesMaxJoursCritiques = 3,
                            PresencesMaxJoursFlexibles = 3,
                            PresencesMaxParJour = 4,
                            PresencesMaxParPersonne = 5,
                            PresencesMinJoursCritiques = 2,
                            PresencesMinJoursFlexibles = 0,
                            PresencesMinParJour = 2,
                            PresencesMinParPersonne = 3,
                            RespectCompetences = true,
                            RotationEquitable = true
                        });
                });

            modelBuilder.Entity("PlanningPresenceBlazor.Data.Conge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CommentaireValidation")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateDemande")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateFin")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DateValidation")
                        .HasColumnType("TEXT");

                    b.Property<int?>("EmployeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Raison")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ValidePar")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EmployeId");

                    b.HasIndex("Status");

                    b.HasIndex("DateDebut", "DateFin");

                    b.ToTable("Conges");
                });

            modelBuilder.Entity("PlanningPresenceBlazor.Data.Employe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DateCreation")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateEmbauche")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasMaxLength(150)
                        .HasColumnType("TEXT");

                    b.Property<int?>("EquipeId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("EstActif")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NiveauCompetence")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<bool>("NotificationEmail")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("NotificationSMS")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("NotificationTeams")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Poste")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("PresencesMaxSemaine")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PresencesMinSemaine")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TeamsId")
                        .HasMaxLength(150)
                        .HasColumnType("TEXT");

                    b.Property<string>("Telephone")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("EquipeId");

                    b.HasIndex("Nom");

                    b.ToTable("Employes");
                });

            modelBuilder.Entity("PlanningPresenceBlazor.Data.EmployeCompetence", b =>
                {
                    b.Property<int>("EmployeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CompetenceId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateAcquisition")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DateExpiration")
                        .HasColumnType("TEXT");

                    b.Property<bool>("EstCertifie")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Niveau")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NumeroCertification")
                        .HasColumnType("TEXT");

                    b.HasKey("EmployeId", "CompetenceId");

                    b.HasIndex("CompetenceId");

                    b.HasIndex("DateExpiration");

                    b.HasIndex("Niveau");

                    b.ToTable("EmployeCompetences");
                });

            modelBuilder.Entity("PlanningPresenceBlazor.Data.Equipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ChefEquipeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CodeEquipe")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<bool>("EstActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("JoursCritiques")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("PresencesMaxParJour")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PresencesMaxParPersonne")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PresencesMinJoursCritiques")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PresencesMinParJour")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PresencesMinParPersonne")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ChefEquipeId");

                    b.HasIndex("CodeEquipe")
                        .IsUnique();

                    b.HasIndex("Nom");

                    b.ToTable("Equipes");
                });

            modelBuilder.Entity("PlanningPresenceBlazor.Data.HistoriqueAffectation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ClientId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CreePar")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DateFin")
                        .HasColumnType("TEXT");

                    b.Property<int>("EmployeId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("EquipeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Motif")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int>("TypeAffectation")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("DateDebut");

                    b.HasIndex("EmployeId");

                    b.HasIndex("EquipeId");

                    b.ToTable("HistoriquesAffectation");
                });

            modelBuilder.Entity("PlanningPresenceBlazor.Data.PlanningEquipeClient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AffectationId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Annee")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DatePlanning")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DateValidation")
                        .HasColumnType("TEXT");

                    b.Property<string>("EmployesAssignes")
                        .HasColumnType("TEXT");

                    b.Property<int>("NombrePresencesPrevues")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NombrePresencesReelles")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SemaineNumero")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("TauxPresence")
                        .HasColumnType("TEXT");

                    b.Property<string>("ValidePar")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Status");

                    b.HasIndex("AffectationId", "DatePlanning");

                    b.HasIndex("Annee", "SemaineNumero");

                    b.ToTable("PlanningsEquipeClient");
                });

            modelBuilder.Entity("PlanningPresenceBlazor.Data.Presence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("EmployeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Note")
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EmployeId");

                    b.ToTable("Presences");
                });

            modelBuilder.Entity("PlanningPresenceBlazor.Data.AffectationEquipeClient", b =>
                {
                    b.HasOne("PlanningPresenceBlazor.Data.Client", "Client")
                        .WithMany("Affectations")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlanningPresenceBlazor.Data.Equipe", "Equipe")
                        .WithMany("Affectations")
                        .HasForeignKey("EquipeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Equipe");
                });

            modelBuilder.Entity("PlanningPresenceBlazor.Data.ClientCompetenceRequise", b =>
                {
                    b.HasOne("PlanningPresenceBlazor.Data.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlanningPresenceBlazor.Data.Competence", "Competence")
                        .WithMany("ClientsRequis")
                        .HasForeignKey("CompetenceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Competence");
                });

            modelBuilder.Entity("PlanningPresenceBlazor.Data.Conge", b =>
                {
                    b.HasOne("PlanningPresenceBlazor.Data.Employe", "Employe")
                        .WithMany()
                        .HasForeignKey("EmployeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Employe");
                });

            modelBuilder.Entity("PlanningPresenceBlazor.Data.Employe", b =>
                {
                    b.HasOne("PlanningPresenceBlazor.Data.Equipe", "Equipe")
                        .WithMany("Membres")
                        .HasForeignKey("EquipeId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Equipe");
                });

            modelBuilder.Entity("PlanningPresenceBlazor.Data.EmployeCompetence", b =>
                {
                    b.HasOne("PlanningPresenceBlazor.Data.Competence", "Competence")
                        .WithMany("Employes")
                        .HasForeignKey("CompetenceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlanningPresenceBlazor.Data.Employe", "Employe")
                        .WithMany("Competences")
                        .HasForeignKey("EmployeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Competence");

                    b.Navigation("Employe");
                });

            modelBuilder.Entity("PlanningPresenceBlazor.Data.Equipe", b =>
                {
                    b.HasOne("PlanningPresenceBlazor.Data.Employe", "ChefEquipe")
                        .WithMany()
                        .HasForeignKey("ChefEquipeId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("ChefEquipe");
                });

            modelBuilder.Entity("PlanningPresenceBlazor.Data.HistoriqueAffectation", b =>
                {
                    b.HasOne("PlanningPresenceBlazor.Data.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("PlanningPresenceBlazor.Data.Employe", "Employe")
                        .WithMany("Historiques")
                        .HasForeignKey("EmployeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlanningPresenceBlazor.Data.Equipe", "Equipe")
                        .WithMany()
                        .HasForeignKey("EquipeId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Client");

                    b.Navigation("Employe");

                    b.Navigation("Equipe");
                });

            modelBuilder.Entity("PlanningPresenceBlazor.Data.PlanningEquipeClient", b =>
                {
                    b.HasOne("PlanningPresenceBlazor.Data.AffectationEquipeClient", "Affectation")
                        .WithMany("Plannings")
                        .HasForeignKey("AffectationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Affectation");
                });

            modelBuilder.Entity("PlanningPresenceBlazor.Data.Presence", b =>
                {
                    b.HasOne("PlanningPresenceBlazor.Data.Employe", "Employe")
                        .WithMany()
                        .HasForeignKey("EmployeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employe");
                });

            modelBuilder.Entity("PlanningPresenceBlazor.Data.AffectationEquipeClient", b =>
                {
                    b.Navigation("Plannings");
                });

            modelBuilder.Entity("PlanningPresenceBlazor.Data.Client", b =>
                {
                    b.Navigation("Affectations");
                });

            modelBuilder.Entity("PlanningPresenceBlazor.Data.Competence", b =>
                {
                    b.Navigation("ClientsRequis");

                    b.Navigation("Employes");
                });

            modelBuilder.Entity("PlanningPresenceBlazor.Data.Employe", b =>
                {
                    b.Navigation("Competences");

                    b.Navigation("Historiques");
                });

            modelBuilder.Entity("PlanningPresenceBlazor.Data.Equipe", b =>
                {
                    b.Navigation("Affectations");

                    b.Navigation("Membres");
                });
#pragma warning restore 612, 618
        }
    }
}
