@page "/analytics"
@using Microsoft.EntityFrameworkCore
@inject PlanningDbContext DbContext

<h3>Analytique avancée</h3>

@if (isLoading)
{
    <div class="text-center py-5">
        <div class="spinner-border text-primary"></div>
        <p class="mt-3 text-muted">Chargement des statistiques...</p>
    </div>
}
else
{
    <div class="row mb-4">
        <div class="col-md-3">
            <div class="stats-card">
                <div class="stat-value text-primary">@totalEmployes</div>
                <div class="stat-label">Employés actifs</div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="stats-card">
                <div class="stat-value text-success">@totalPresences</div>
                <div class="stat-label">Présences cette semaine</div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="stats-card">
                <div class="stat-value text-warning">@totalConges</div>
                <div class="stat-label">Congés cette semaine</div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="stats-card">
                <div class="stat-value text-info">@presenceRate %</div>
                <div class="stat-label">Taux de présence</div>
            </div>
        </div>
    </div>
}

@code {
    private int totalEmployes = 0;
    private int totalPresences = 0;
    private int totalConges = 0;
    private int presenceRate = 0;
    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        isLoading = true;
        var employes = await DbContext.Employes.Where(e => e.EstActif).ToListAsync();
        totalEmployes = employes.Count;
        var today = DateTime.Today;
        var monday = today.AddDays(-(int)today.DayOfWeek + 1);
        var friday = monday.AddDays(4);
        var presences = await DbContext.Presences.Where(p => p.Date >= monday && p.Date <= friday && p.Status == "present").ToListAsync();
        totalPresences = presences.Count;
        var conges = await DbContext.Conges.Where(c => c.DateDebut <= friday && c.DateFin >= monday).ToListAsync();
        totalConges = conges.Count;
        presenceRate = totalEmployes > 0 ? (totalPresences * 100) / (totalEmployes * 5) : 0;
        isLoading = false;
    }
}

<style>
.stats-card {
    background: #f8fafc;
    border-radius: 10px;
    padding: 1.5rem 1rem;
    margin-bottom: 1rem;
    text-align: center;
    box-shadow: 0 2px 10px rgba(0,0,0,0.05);
}
.stat-value {
    font-size: 2rem;
    font-weight: 600;
}
.stat-label {
    color: #7f8c8d;
    font-size: 1.1rem;
}
</style>
